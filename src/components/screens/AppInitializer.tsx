'use client';

import { useState, useEffect } from 'react';
import { SplashScreen } from './SplashScreen';
import { OnboardingScreen } from './OnboardingScreen';

interface AppInitializerProps {
  children: React.ReactNode;
}

type AppState = 'splash' | 'onboarding' | 'auth' | 'main';

export const AppInitializer = ({ children }: AppInitializerProps) => {
  const [appState, setAppState] = useState<AppState>('splash');
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã
    setIsClient(true);
    
    // –í—Ä–µ–º–µ–Ω–Ω–æ: –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≥–ª–∞–≤–Ω–æ–º—É —ç–∫—Ä–∞–Ω—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    console.log('üöÄ AppInitializer: Will show main app after splash');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–µ–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
    const hasCompletedOnboarding = localStorage.getItem('hasCompletedOnboarding');
    const isLoggedIn = localStorage.getItem('isLoggedIn');
    
    console.log('üîç AppInitializer state:', { hasCompletedOnboarding, isLoggedIn });
    
    // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
    localStorage.setItem('hasCompletedOnboarding', 'true');
    localStorage.setItem('isLoggedIn', 'true');
  }, []);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º splash –¥–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞
  if (!isClient) {
    return <SplashScreen onComplete={() => {}} />;
  }

  const handleSplashComplete = () => {
    const hasCompletedOnboarding = localStorage.getItem('hasCompletedOnboarding');
    
    console.log('üé¨ Splash completed, hasCompletedOnboarding:', hasCompletedOnboarding);
    
    if (hasCompletedOnboarding === 'true') {
      console.log('‚û°Ô∏è Going to main app');
      setAppState('main');
    } else {
      console.log('‚û°Ô∏è Going to onboarding');
      setAppState('onboarding');
    }
  };

  const handleOnboardingComplete = () => {
    localStorage.setItem('hasCompletedOnboarding', 'true');
    setAppState('main');
  };

  const handleLogin = () => {
    // –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –∫ —ç–∫—Ä–∞–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    localStorage.setItem('hasCompletedOnboarding', 'true');
    localStorage.setItem('isLoggedIn', 'true');
    setAppState('main');
  };

  console.log('üé≠ Current app state:', appState);

  switch (appState) {
    case 'splash':
      return <SplashScreen onComplete={handleSplashComplete} />;
    
    case 'onboarding':
      return (
        <OnboardingScreen 
          onComplete={handleOnboardingComplete}
          onLogin={handleLogin}
        />
      );
    
    case 'auth':
      // –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      return <div>Auth Screen</div>;
    
    case 'main':
    default:
      console.log('üè† Rendering main app');
      return <>{children}</>;
  }
}; 