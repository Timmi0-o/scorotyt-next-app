'use client'

import { IHomeData } from '@/actions'
import { OrderAgainSection } from '@/components/home/OrderAgainSection'
import { RestaurantSection } from '@/components/home/RestaurantSection'
import { StoresGrid } from '@/components/home/StoresGrid'
import { BottomNavigation } from '@/components/layout/BottomNavigation'
import { useTelegramInitData } from '@/hooks/useTelegramInitData'
import clsx from 'clsx'
import { useState } from 'react'
import styles from './HomePage.module.css'

export const HomePage = ({ data }: { data: IHomeData }) => {
	const sections = [
		{
			title: '–ü–æ–ø—É–ª—è—Ä–Ω–æ–µ',
			items: data?.sellers,
		},
		{
			title: '–†–æ–ª–ª—ã',
			items: data.sellers,
		},
		{
			title: '–ü–∏—Ü—Ü–∞',
			items: data.sellers,
		},
		{
			title: '–ë—É—Ä–≥–µ—Ä—ã',
			items: data.sellers,
		},
	]

	const { initData, isReady } = useTelegramInitData()

	const [activeSection, setActiveSection] = useState(0)

	return (
		<div className='min-h-screen bg-background'>
			<div className={styles.container}>
				{/* Header */}
				<div className={styles.header}>
					<div className={styles.addressSection}>
						<div className={styles.address}>
							–ö–æ–º—Å–æ–º–æ–ª—å—Å–∫–∞—è, 3<span className={styles.dropdown}>‚ñº</span>
						</div>
						<div className={styles.deliveryTime}>–î–æ—Å—Ç–∞–≤–∫–∞ 40-60 –º–∏–Ω—É—Ç</div>
					</div>
					<div className={styles.avatar}>üë§</div>
				</div>

				{/* Category Tabs */}
				<div className={styles.tabsContainer}>
					<div className={styles.tabsWrapper}>
						{sections.map((section, index) => (
							<button
								key={section.title}
								className={clsx(
									styles.tab,
									activeSection === index
										? styles.tabActive
										: styles.tabInactive
								)}
								onClick={() => setActiveSection(index)}
							>
								{section.title}
							</button>
						))}
					</div>
				</div>

				<div className={styles.content}>
					{/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –†–µ—Å—Ç–æ—Ä–∞–Ω—ã */}
					<div className={styles.sectionHeader}>
						<h2 className={styles.sectionTitle}>–†–µ—Å—Ç–æ—Ä–∞–Ω—ã</h2>
						<button className={styles.seeAllButton}>
							–í—Å–µ <span className={styles.arrow}>‚Ä∫</span>
						</button>
					</div>

					<RestaurantSection sellers={data.sellers || []} />

					<OrderAgainSection />
					<StoresGrid />

					{/* Delivery Banner */}
					{/* <div className={styles.deliveryBanner}>
					<button className={styles.deliveryLink}>
						–¥–æ—Å—Ç–∞–≤–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ
						<span className={styles.arrow}>‚Ä∫</span>
					</button>
				</div> */}
				</div>

				{/* Bottom Action Button - –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–∫—Ä—ã—Ç */}
				{/* 
			<div className={styles.bottomButton}>
				<button className={styles.actionButton}>
					<span className={styles.time}>40-60 –º–∏–Ω</span>
					<span className={styles.text}>–î–∞–ª–µ–µ</span>
					<span className={styles.price}>170 ‚ÇΩ</span>
				</button>
			</div>
			*/}
			</div>

			<BottomNavigation />

			{/* <DevTools /> */}

			{/* –°—Ç–∞—Ç—É—Å Telegram WebApp (—Å–∫—Ä—ã—Ç—ã–π –æ–≤–µ—Ä–ª–µ–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏) */}
			{process.env.NEXT_PUBLIC_MOCK_TELEGRAM === 'true' && (
				<div className='fixed top-2 left-2 z-50 bg-black/50 text-white text-xs px-2 py-1 rounded'>
					{!isReady
						? 'üîÑ –ó–∞–≥—Ä—É–∑–∫–∞...'
						: initData?.user
						? `üëã ${initData.user.first_name}`
						: '‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}
				</div>
			)}
		</div>
	)
}
